<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>_Index on 끄적끄적..</title>
    <link>/docs/cloud/</link>
    <description>Recent content in _Index on 끄적끄적..</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 17 Oct 2019 08:39:34 +0900</lastBuildDate>
    
	<atom:link href="/docs/cloud/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>IaaS</title>
      <link>/docs/cloud/IaaS/</link>
      <pubDate>Thu, 17 Oct 2019 08:46:46 +0900</pubDate>
      
      <guid>/docs/cloud/IaaS/</guid>
      <description> IaaS (Infrastructure as a Service) 정의  서버, 스토리지, 네트워크를 필요에 따라 인프라 자원을 사용할 수 있게 클라우드 서비스를 제공하는 형태 대표적인 기술 : 서버 가상화, 데스크톱 가상화 등 (ex. 하이퍼 바이저 (Hypervisor))  서비스 형태에 따른 구분 Infrastructure as a Service (출처. IBM Developer)  On-Premise (IDC)  여러 솔루션을 원격 환경이 아닌 자체적으로 보유한 전산실 서버에 직접 설치 및 운영하는 방식 데이터센터 레벨부터 물리적 인프라(서버/스토리지/네트워크), 가상화를 위한 하이퍼바이저 레벨, 그리고 서버 가상화 솔루션을 통한 가상서버 레벨까지 모두 컨트롤(관리) 가능  Other Cloud Customers  일반적인 퍼블릭클라우드 (IaaS) 고객은 가상서버 레벨에 대해서만 컨트롤 가능  장점  데이터센터, 물리적 인프라, 하이퍼바이저 레벨에 대해서 신경쓸 필요없음 가상서버에 대해서만 관리하면 됨  단점  가상서버 하위 레벨에 대한 관리 불가 정형화된 하이퍼바이저와 가상 인프라 지원에 대해서만 접근/사용할 수 있음    하이브리드 방식 (퍼블릭클라우드 + 호스팅)  서비스 환경에 따라 On-Premise와 일반적인 퍼블릭클라우드의 장단점을 취하기 위함 베어메탈(bare metal) 클라우드 방식 제공으로, 사용자에게 특정 물리 호스트 전체 제어권을 줄 수 있음  대표적인 서비스  Amazon EC2 (Amazon Elastic Compute Cloud) Azure IaaS (Microsoft) IBM softlayer  </description>
    </item>
    
    <item>
      <title>PaaS</title>
      <link>/docs/cloud/PaaS/</link>
      <pubDate>Thu, 17 Oct 2019 08:46:43 +0900</pubDate>
      
      <guid>/docs/cloud/PaaS/</guid>
      <description>PaaS (Platform as a Service) 정의  제공자가 사용자에게 플랫폼을 제공함으로써 비즈니스 애플리케이션을 개발, 실행, 관리할 수 있도록 하는 것 사용자가 소프트웨어 개발 프로세스에 필요한 인프라를 구축하고 유지할 필요없음
  Platform as a Service (출처. ZOHO)  특징  인프라를 만들고 유지보수하는 복잡함 없이 고객이 애플리케이션 개발, 실행, 관리할 수 있도록 플랫폼으로 제공 서비스를 개발할 수 있는 안정적인 환경과 그 환경을 이용하는 응용 프로그램을 개발할 수 있는 api까지 제공  장점  플랫폼에서 제공되는 미리 코딩된 애플리케이션 구성요소를 이용해 새로운 앱을 쉽게 개발할 수 있음 여러 플랫폼 개발 옵션 등의 제공으로 플랫폼 간 앱을 더 빠르고 쉽게 개발할 수 있음 인터넷을 통한 개발 환경으로, 팀 멤버가 원격 위치에 있더라도 프로젝트 함께 작업 가능 통합환경 내에서 빌드, 테스트, 배포, 관리, 업데이트의 웹 애플리케이션 수명 주기를 효율적으로 관리  단점  정보 보안의 문제가 있을 수 있음 제공업체의 인프라 환경 이슈로 인해 서비스에 영향을 미칠 수 있음 제공업체의 개발 전략, 프로그래밍 언어, 기타 영역을 변경할 경우에 대한 대책이 필요할 수 있음  사용 사례  API 개발 및 관리 : 마이크로서비스 개발, 실행, 관리, 보호를 위한 api 개발 및 관리 비즈니스 분석 : PaaS로 제공되는 툴을 이용한, 데이터 분석 및 행동 패턴 예측</description>
    </item>
    
    <item>
      <title>SaaS</title>
      <link>/docs/cloud/SaaS/</link>
      <pubDate>Thu, 17 Oct 2019 08:44:35 +0900</pubDate>
      
      <guid>/docs/cloud/SaaS/</guid>
      <description>SaaS (Software as a Service) 정의  클라우드 환경에서 동작하는 응용프로그램을 서비스 형태로 제공하는 것 주문형 소프트웨어(on-demand software)라고도 불림  Software as a Service (출처. v-comply)  특징  네트워크 기반으로 접근하고 관리하는, 상업적으로 사용 가능한 소프트웨어 사용자가 웹을 통해 애플리케이션에 접근하고, 중앙에서 활동 관리 1:N 모델(single instance, multi-tenant)에 가까움 (아키텍처, 가격, 파트너링, 관리 등이 포함)  장점  퍼블릭 클라우드에 있는 소프트웨어를 웹을 통해 언제 어디서나 사용할 수 있음 네트워크를 통해 서비스되므로 사용하기 쉽고, 최신 소프트웨어 업데이트를 빠르게 제공받을 수 있음  단점  데이터 처리 및 보관이 외부 클라우드 서비스에서 이루어지기 때문에 데이터 노출의 위험이 있을 수 있음 인터넷을 통해 접속 가능하므로, 인프라가 외부와 단절되어 있거나 통신 환경이 열악한 곳에서는 이용할 수 없음  서비스 형태 로그인 타입  아이디와 패스워드를 부여받고 홈페이지 통해 서비스를 이용하는 형태 별도의 설치 시간이 필요없고, 누구나 빠르게 서비스에 접근할 수 있음 대표적인 사례 : Google Apps, MS office 365, 더존 클라우드팩스, 한컴 넷피스24 등  API 타입  퍼블릭 클라우드 속에 설치되어있는 소프트웨어 패키지를 api로 제공받아, 기업서버(ERP)에 적용해서 서비스를 이용하는 형태 기업의 ERP 또는 CRM과의 연동성이 관건 API 타입은 특정 시스템과의 연동이 반드시 필요하기 때문에 일반 사용자용으로 제공하지 않음  대표적인 서비스  Gmail Google Apps</description>
    </item>
    
  </channel>
</rss>